// Code generated by goctl. DO NOT EDIT.
// Source: UserService.proto

package server

import (
	"context"
	logic2 "douyin/pkg/user/internal/logic"
	"douyin/pkg/user/internal/svc"
	userInfoPb2 "douyin/pkg/user/userInfoPb"
)

type UserServiceServer struct {
	svcCtx *svc.ServiceContext
	userInfoPb2.UnimplementedUserServiceServer
}

func NewUserServiceServer(svcCtx *svc.ServiceContext) *UserServiceServer {
	return &UserServiceServer{
		svcCtx: svcCtx,
	}
}

// -----------------------user-----------------------
func (s *UserServiceServer) Register(ctx context.Context, in *userInfoPb2.RegisterReq) (*userInfoPb2.RegisterResp, error) {
	l := logic2.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UserServiceServer) Login(ctx context.Context, in *userInfoPb2.LoginReq) (*userInfoPb2.LoginResp, error) {
	l := logic2.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserServiceServer) Info(ctx context.Context, in *userInfoPb2.UserInfoReq) (*userInfoPb2.UserInfoResp, error) {
	l := logic2.NewInfoLogic(ctx, s.svcCtx)
	return l.Info(in)
}
