// Code generated by goctl. DO NOT EDIT.
// Source: UserOptService.proto

package useroptservice

import (
	"context"

	"douyin/pkg/favorite/rpc/userOptPb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetUserFavoriteReq       = userOptPb.GetUserFavoriteReq
	GetUserFavoriteResp      = userOptPb.GetUserFavoriteResp
	UpdateFavoriteStatusReq  = userOptPb.UpdateFavoriteStatusReq
	UpdateFavoriteStatusResp = userOptPb.UpdateFavoriteStatusResp

	UserOptService interface {
		// -----------------------userFavoriteList-----------------------
		GetUserFavorite(ctx context.Context, in *GetUserFavoriteReq, opts ...grpc.CallOption) (*GetUserFavoriteResp, error)
		UpdateFavoriteStatus(ctx context.Context, in *UpdateFavoriteStatusReq, opts ...grpc.CallOption) (*UpdateFavoriteStatusResp, error)
	}

	defaultUserOptService struct {
		cli zrpc.Client
	}
)

func NewUserOptService(cli zrpc.Client) UserOptService {
	return &defaultUserOptService{
		cli: cli,
	}
}

// -----------------------userFavoriteList-----------------------
func (m *defaultUserOptService) GetUserFavorite(ctx context.Context, in *GetUserFavoriteReq, opts ...grpc.CallOption) (*GetUserFavoriteResp, error) {
	client := userOptPb.NewUserOptServiceClient(m.cli.Conn())
	return client.GetUserFavorite(ctx, in, opts...)
}

func (m *defaultUserOptService) UpdateFavoriteStatus(ctx context.Context, in *UpdateFavoriteStatusReq, opts ...grpc.CallOption) (*UpdateFavoriteStatusResp, error) {
	client := userOptPb.NewUserOptServiceClient(m.cli.Conn())
	return client.UpdateFavoriteStatus(ctx, in, opts...)
}
