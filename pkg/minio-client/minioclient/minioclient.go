// Code generated by goctl. DO NOT EDIT!
// Source: minio-client.proto

package minioclient

import (
	"context"

	"douyin/pkg/minio-client/types/minio-client"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UploadFileReply   = minio_client.UploadFileReply
	UploadFileRequest = minio_client.UploadFileRequest

	MinIOClient interface {
		UploadFile(ctx context.Context, in *UploadFileRequest, opts ...grpc.CallOption) (*UploadFileReply, error)
	}

	defaultMinIOClient struct {
		cli zrpc.Client
	}
)

func NewMinIOClient(cli zrpc.Client) MinIOClient {
	return &defaultMinIOClient{
		cli: cli,
	}
}

func (m *defaultMinIOClient) UploadFile(ctx context.Context, in *UploadFileRequest, opts ...grpc.CallOption) (*UploadFileReply, error) {
	client := minio_client.NewMinIOClientClient(m.cli.Conn())
	return client.UploadFile(ctx, in, opts...)
}
